image: golang:latest

variables:
  REPO_NAME: gitlab.papegames.com/fengche/yayagf

before_script:
  - echo $CI_PROJECT_DIR
  - export GOPATH=/home/gitlab-runner
  - export PATH=$PATH:/usr/local/go/bin

stages:
  - test
  - build

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race -cover -coverprofile=./coverage.data $(go list ./... | grep -v /vendor/)
    - go tool cover -html=./coverage.data -o ./coverage.html
  artifacts:
    untracked: true

#lint_code:
#  stage: test
#  script:
#    - golangci-lint run ./...

sonar_analyze:
  stage: test
  script:
    - wget -P / https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip
    - unzip /sonar-scanner-cli-4.2.0.1873-linux.zip -C /opt
    - /opt/sonar-scanner-4.2.0.1873-linux/bin/sonar-scanner -Dsonar.analysis.mode=preview -Dsonar.projectKey=gitlab:$CI_COMMIT_REF_NAME:$CI_PROJECT_NAME -Dsonar.projectName=gitlab:$CI_COMMIT_REF_NAME:$CI_PROJECT_NAME -Dsonar.projectVersion=1.0.$CI_PIPELINE_ID -Dsonar.issuesReport.html.enable=true -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME


compile:
  stage: build
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/nnmutex
  artifacts:
    paths:
      - nnmutex
